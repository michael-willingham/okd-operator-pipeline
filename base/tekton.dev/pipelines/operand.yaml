apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: operand
  namespace: okd-team
spec:
  params:
    - name: repo-url
      description: The repo url
      type: string
    - name: repo-ref
      description: The repo ref
      type: string
    - name: base-image-registry
      description: The base image registry
      type: string
    - name: image-name
      description: The image name
      type: string
    - name: image-version
      description: The image version
      type: string
    - name: build-image
      description: The build image
      type: string
      default: quay.io/okderators/bundle-tools:vdev
    - name: enable-timestamp
      description: Enable timestamp
      type: string
      default: "true"
    - name: env-map
      description: The env map
      type: string
      default: ""
  
  workspaces:
    - name: workspace
    - name: patches
  
  tasks:
    - name: clone-and-patch
      taskRef:
        name: git-clone
      params:
        - name: url
          value: $(params.repo-url)
        - name: deleteExisting
          value: 'true'
        - name: revision
          value: $(params.repo-ref)
        - name: verbose
          value: 'true'
        - name: subdirectory
          value: repository
      workspaces:
        - name: output
          workspace: workspace
        - name: patches
          workspace: patches

    - name: get-id
      taskRef:
        name: build-id
      params:
        - name: version
          value: $(params.image-version)
        - name: enable-timestamp
          value: $(params.enable-timestamp)

    - name: install
      runAfter: [ clone-and-patch, get-id ]
      taskRef:
        name: make
      params:
        - name: image
          value: $(params.build-image)
        - name: subdirectory
          value: repository
        - name: args
          value: ["okd-install"]
        - name: image-name
          value: $(params.image-name)
        - name: image-registry
          value: $(params.base-image-registry)
        - name: version
          value: $(tasks.get-id.results.build-id)
        - name: env-map
          value: $(params.env-map)
      workspaces:
        - name: work
          workspace: workspace

    - name: build
      runAfter: [ install,  ]
      taskRef:
        name: make
      params:
        - name: image
          value: $(params.build-image)
        - name: subdirectory
          value: repository
        - name: args
          value: [ "okd-build" ]
        - name: image-name
          value: $(params.image-name)
        - name: image-registry
          value: $(params.base-image-registry)
        - name: version
          value: $(tasks.get-id.results.build-id)
        - name: env-map
          value: $(params.env-map)
      workspaces:
        - name: work
          workspace: workspace

    - name: lint
      runAfter: [ build ]
      taskRef:
        name: make
      params:
        - name: image
          value: $(params.build-image)
        - name: subdirectory
          value: repository
        - name: args
          value: [ "okd-lint" ]
        - name: image-name
          value: $(params.image-name)
        - name: image-registry
          value: $(params.base-image-registry)
        - name: version
          value: $(tasks.get-id.results.build-id)
        - name: env-map
          value: $(params.env-map)
      workspaces:
        - name: work
          workspace: workspace

    - name: test
      runAfter: [ lint ]
      taskRef:
        name: make
      params:
        - name: image
          value: $(params.build-image)
        - name: subdirectory
          value: repository
        - name: args
          value: [ "okd-test" ]
        - name: image-name
          value: $(params.image-name)
        - name: image-registry
          value: $(params.base-image-registry)
        - name: version
          value: $(tasks.get-id.results.build-id)
        - name: env-map
          value: $(params.env-map)
      workspaces:
        - name: work
          workspace: workspace

    - name: deploy
      runAfter: [ test ]
      taskRef:
        name: make
      params:
        - name: image
          value: $(params.build-image)
        - name: subdirectory
          value: repository
        - name: args
          value: [ "okd-deploy" ]
        - name: image-name
          value: $(params.image-name)
        - name: image-registry
          value: $(params.base-image-registry)
        - name: version
          value: $(tasks.get-id.results.build-id)
        - name: env-map
          value: $(params.env-map)
      workspaces:
        - name: work
          workspace: workspace
