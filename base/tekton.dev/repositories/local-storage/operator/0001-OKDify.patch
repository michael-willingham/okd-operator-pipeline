From 1711f3e89f823c00e803d3c40dc5de395ef1ceb5 Mon Sep 17 00:00:00 2001
From: SupremeMortal <6178101+SupremeMortal@users.noreply.github.com>
Date: Tue, 16 Apr 2024 00:42:23 +0100
Subject: [PATCH] OKDify

---
 Dockerfile.diskmaker.rhel7                    |  8 +--
 Dockerfile.mustgather                         |  8 ++-
 Dockerfile.rhel7                              |  8 +--
 Makefile                                      | 56 ++++++++++++-------
 .../localmetrics/prometheus-rule.yaml         |  2 +-
 ...torage-operator.clusterserviceversion.yaml | 16 +++---
 hack/create-bundle.sh                         | 12 ++--
 7 files changed, 65 insertions(+), 45 deletions(-)

diff --git a/Dockerfile.diskmaker.rhel7 b/Dockerfile.diskmaker.rhel7
index 846d5a27..809a9aa1 100644
--- a/Dockerfile.diskmaker.rhel7
+++ b/Dockerfile.diskmaker.rhel7
@@ -1,9 +1,9 @@
-FROM registry.ci.openshift.org/ocp/builder:rhel-9-golang-1.20-openshift-4.15 AS builder
+FROM quay.io/projectquay/golang:1.20 AS builder
 WORKDIR /go/src/github.com/openshift/local-storage-operator
 COPY . .
 RUN make build-diskmaker

-FROM registry.ci.openshift.org/ocp/4.15:base-rhel9
+FROM quay.io/centos/centos:stream9

 COPY --from=builder /go/src/github.com/openshift/local-storage-operator/_output/bin/diskmaker /usr/bin/
 COPY --from=builder /go/src/github.com/openshift/local-storage-operator/hack/scripts /scripts
@@ -12,6 +12,6 @@ COPY config/manifests /manifests
 RUN yum install -y e2fsprogs xfsprogs && yum clean all && rm -rf /var/cache/yum

 ENTRYPOINT ["/usr/bin/diskmaker"]
-LABEL io.k8s.display-name="OpenShift local storage diskmaker" \
-      io.k8s.description="This is a component of OpenShift and manages local disks." \
+LABEL io.k8s.display-name="OKD local storage diskmaker" \
+      io.k8s.description="This is a component of OKD and manages local disks." \
         maintainer="Hemant Kumar <hekumar@redhat.com>"
diff --git a/Dockerfile.mustgather b/Dockerfile.mustgather
index c342be0a..71292398 100644
--- a/Dockerfile.mustgather
+++ b/Dockerfile.mustgather
@@ -1,6 +1,8 @@
-FROM registry.ci.openshift.org/ocp/4.15:base-rhel9
-RUN dnf install -y --nodocs --setopt=install_weak_deps=False openshift-clients \
-  && dnf clean all && rm -rf /var/cache/*
+FROM quay.io/centos/centos:stream9
+
+ARG OKD
+
+RUN curl -fL "https://github.com/okd-project/okd/releases/download/$OKD/openshift-client-linux-$OKD.tar.gz" | tar -U -C /usr/bin -xzf -
 COPY must-gather/gather /usr/bin/
 RUN chmod +x /usr/bin/gather

diff --git a/Dockerfile.rhel7 b/Dockerfile.rhel7
index da4254a0..3a196187 100644
--- a/Dockerfile.rhel7
+++ b/Dockerfile.rhel7
@@ -1,13 +1,13 @@
-FROM registry.ci.openshift.org/ocp/builder:rhel-9-golang-1.20-openshift-4.15 AS builder
+FROM quay.io/projectquay/golang:1.20 AS builder
 WORKDIR /go/src/github.com/openshift/local-storage-operator
 COPY . .
 RUN make build-operator

-FROM registry.ci.openshift.org/ocp/4.15:base-rhel9
+FROM quay.io/centos/centos:stream9-minimal
 COPY --from=builder /go/src/github.com/openshift/local-storage-operator/_output/bin/local-storage-operator /usr/bin/
 COPY config/manifests /manifests
 ENTRYPOINT ["/usr/bin/local-storage-operator"]
 LABEL com.redhat.delivery.appregistry=true
-LABEL io.k8s.display-name="OpenShift local-storage-operator" \
-      io.k8s.description="This is a component of OpenShift and manages local volumes." \
+LABEL io.k8s.display-name="OKD local-storage-operator" \
+      io.k8s.description="This is a component of OKD and manages local volumes." \
         maintainer="Hemant Kumar <hekumar@redhat.com>"
diff --git a/Makefile b/Makefile
index 4699a233..a288e342 100644
--- a/Makefile
+++ b/Makefile
@@ -1,31 +1,30 @@
 # To generate a bundle for a specific REGISTRY, REPO, and VERSION, you can:
 # make bundle REGISTRY=quay.io/username REPO=lso VERSION=latest
-ifeq ($(REGISTRY),)
-	REGISTRY = quay.io/openshift
-endif
-ifeq ($(REPO),)
-	REPO = local-storage-operator
-endif
-ifeq ($(VERSION),)
-	VERSION = latest
-endif
+BASE_REGISTRY ?= quay.io/okderators
+REGISTRY ?= $(BASE_REGISTRY)
+IMAGE_NAME ?= local-storage-operator
+REPO ?= $(IMAGE_NAME)
+VERSION ?= latest

 # Use podman or docker to build containers. Can bet set explicitly.
 # make bundle REGISTRY=quay.io/username TOOL_BIN=`which docker`
-ifeq ($(TOOL_BIN),)
-	TOOL_BIN=$(shell which podman 2>/dev/null || which docker 2>/dev/null)
-endif
+#ifeq ($(TOOL_BIN),)
+#	TOOL_BIN=$(shell which podman 2>/dev/null || which docker 2>/dev/null)
+#endif
+BUILD_CMD ?= podman
+TOOL_BIN ?= $(BUILD_CMD)
+export TOOL_BIN

 TARGET_GOOS=$(shell go env GOOS)
 TARGET_GOARCH=$(shell go env GOARCH)

 CURPATH=$(PWD)
 TARGET_DIR=$(CURPATH)/_output/bin
-OPERATOR_IMAGE= $(REGISTRY)/$(REPO):operator-$(VERSION)
-DISKMAKER_IMAGE = $(REGISTRY)/$(REPO):diskmaker-$(VERSION)
-MUSTGATHER_IMAGE = $(REGISTRY)/$(REPO):mustgather-$(VERSION)
-BUNDLE_IMAGE = $(REGISTRY)/$(REPO):bundle-$(VERSION)
-INDEX_IMAGE = $(REGISTRY)/$(REPO):index-$(VERSION)
+OPERATOR_IMAGE= $(REGISTRY)/$(REPO):$(VERSION)
+DISKMAKER_IMAGE = $(REGISTRY)/local-storage-diskmaker:$(VERSION)
+MUSTGATHER_IMAGE = $(REGISTRY)/local-storage-mustgather:$(VERSION)
+BUNDLE_IMAGE = $(REGISTRY)/local-storage-operator-bundle:$(VERSION)
+INDEX_IMAGE = $(REGISTRY)/local-storage-index:$(VERSION)
 REV=$(shell git describe --long --tags --match='v*' --dirty 2>/dev/null || git rev-list -n1 HEAD)

 # Get the currently used golang install path (in GOPATH/bin, unless GOBIN is set)
@@ -113,7 +112,7 @@ push: images
 .PHONY: push

 must-gather:
-	$(TOOL_BIN) build -t $(MUSTGATHER_IMAGE) -f $(CURPATH)/Dockerfile.mustgather .
+	$(TOOL_BIN) build -t $(MUSTGATHER_IMAGE) -f $(CURPATH)/Dockerfile.mustgather --build-arg="OKD=$(OKD)" .
 .PHONY: must-gather

 # this is ugly, but allows us to build dev containers without tripping over yum install
@@ -129,7 +128,7 @@ operator-container:
 	$(TOOL_BIN) build -t $(OPERATOR_IMAGE) -f $(CURPATH)/Dockerfile.rhel7 .
 .PHONY: operator-container

-bundle: push
+bundle: #push
 	./hack/create-bundle.sh $(OPERATOR_IMAGE) $(DISKMAKER_IMAGE) $(BUNDLE_IMAGE) $(INDEX_IMAGE)
 .PHONY: bundle

@@ -140,3 +139,22 @@ clean:
 test_e2e:
 	./hack/test-e2e.sh
 .PHONY: test_e2e
+
+.PHONY: okd-install okd-lint okd-build okd-test okd-deploy okd-bundle
+
+OKD ?= $(shell curl -s https://api.github.com/repos/okd-project/okd/releases/latest | grep '"tag_name":' | sed -E 's/.*"([^"]+)".*/\1/')
+
+okd-install: controller-gen
+	go mod download
+
+okd-lint: verify
+
+okd-build: build
+
+okd-test: #test
+	@echo "Disabled tests for now"
+
+okd-deploy: push must-gather
+	@$(BUILD_CMD) push $(MUSTGATHER_IMAGE)
+
+okd-bundle: bundle
diff --git a/assets/templates/localmetrics/prometheus-rule.yaml b/assets/templates/localmetrics/prometheus-rule.yaml
index 13ba1719..bce28758 100644
--- a/assets/templates/localmetrics/prometheus-rule.yaml
+++ b/assets/templates/localmetrics/prometheus-rule.yaml
@@ -24,6 +24,6 @@ spec:
             Please check all LocalVolume and LocalVolumeSet objects and make sure that they have
             correct "nodeSelector" and "tolerations" fields, and there are nodes that match the
             nodeSelector and all taints of the matching nodes are tolerated.
-            A frequent issue is that nodes that run OpenShift Data Foundation (ODF) are tainted,
+            A frequent issue is that nodes that run OKD Data Foundation (ODF) are tainted,
             so only ODF runs on these nodes. In that case, LocalVolume / LocalVolumeSet objects
             must tolerate such a taint to provide disks for ODF on the nodes.
diff --git a/config/manifests/stable/local-storage-operator.clusterserviceversion.yaml b/config/manifests/stable/local-storage-operator.clusterserviceversion.yaml
index 55a5e314..27cd6804 100644
--- a/config/manifests/stable/local-storage-operator.clusterserviceversion.yaml
+++ b/config/manifests/stable/local-storage-operator.clusterserviceversion.yaml
@@ -111,7 +111,7 @@ metadata:
     operatorframework.io/cluster-monitoring: "true"
     capabilities: Full Lifecycle
     containerImage: quay.io/openshift/origin-local-storage-operator:latest
-    support: Red Hat
+    support: OKD Community
     repository: https://github.com/openshift/local-storage-operator
     createdAt: "2019-08-14T00:00:00Z"
     description: Configure and use local storage volumes.
@@ -139,11 +139,11 @@ metadata:
 spec:
   displayName: Local Storage
   description: >
-    Operator that configures local storage volumes for use in Kubernetes and OpenShift.
-    OpenShift 4.2 and above are the only supported OpenShift versions.
+    Operator that configures local storage volumes for use in Kubernetes and OKD.
+    OKD 4.2 and above are the only supported OKD versions.
   icon:
-    - base64data: PHN2ZyBpZD0iTGF5ZXJfMSIgZGF0YS1uYW1lPSJMYXllciAxIiB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHZpZXdCb3g9IjAgMCAxOTIgMTQ1Ij48ZGVmcz48c3R5bGU+LmNscy0xe2ZpbGw6I2UwMDt9PC9zdHlsZT48L2RlZnM+PHRpdGxlPlJlZEhhdC1Mb2dvLUhhdC1Db2xvcjwvdGl0bGU+PHBhdGggZD0iTTE1Ny43Nyw2Mi42MWExNCwxNCwwLDAsMSwuMzEsMy40MmMwLDE0Ljg4LTE4LjEsMTcuNDYtMzAuNjEsMTcuNDZDNzguODMsODMuNDksNDIuNTMsNTMuMjYsNDIuNTMsNDRhNi40Myw2LjQzLDAsMCwxLC4yMi0xLjk0bC0zLjY2LDkuMDZhMTguNDUsMTguNDUsMCwwLDAtMS41MSw3LjMzYzAsMTguMTEsNDEsNDUuNDgsODcuNzQsNDUuNDgsMjAuNjksMCwzNi40My03Ljc2LDM2LjQzLTIxLjc3LDAtMS4wOCwwLTEuOTQtMS43My0xMC4xM1oiLz48cGF0aCBjbGFzcz0iY2xzLTEiIGQ9Ik0xMjcuNDcsODMuNDljMTIuNTEsMCwzMC42MS0yLjU4LDMwLjYxLTE3LjQ2YTE0LDE0LDAsMCwwLS4zMS0zLjQybC03LjQ1LTMyLjM2Yy0xLjcyLTcuMTItMy4yMy0xMC4zNS0xNS43My0xNi42QzEyNC44OSw4LjY5LDEwMy43Ni41LDk3LjUxLjUsOTEuNjkuNSw5MCw4LDgzLjA2LDhjLTYuNjgsMC0xMS42NC01LjYtMTcuODktNS42LTYsMC05LjkxLDQuMDktMTIuOTMsMTIuNSwwLDAtOC40MSwyMy43Mi05LjQ5LDI3LjE2QTYuNDMsNi40MywwLDAsMCw0Mi41Myw0NGMwLDkuMjIsMzYuMywzOS40NSw4NC45NCwzOS40NU0xNjAsNzIuMDdjMS43Myw4LjE5LDEuNzMsOS4wNSwxLjczLDEwLjEzLDAsMTQtMTUuNzQsMjEuNzctMzYuNDMsMjEuNzdDNzguNTQsMTA0LDM3LjU4LDc2LjYsMzcuNTgsNTguNDlhMTguNDUsMTguNDUsMCwwLDEsMS41MS03LjMzQzIyLjI3LDUyLC41LDU1LC41LDc0LjIyYzAsMzEuNDgsNzQuNTksNzAuMjgsMTMzLjY1LDcwLjI4LDQ1LjI4LDAsNTYuNy0yMC40OCw1Ni43LTM2LjY1LDAtMTIuNzItMTEtMjcuMTYtMzAuODMtMzUuNzgiLz48L3N2Zz4=
-      mediatype: image/svg+xml
+    - base64data: 
+      mediatype: image/png
   keywords:
     - storage
     - local storage
@@ -156,10 +156,10 @@ spec:
   maturity: stable
   maintainers:
     - email: aos-storage-staff@redhat.com
-      name: Red Hat
+      name: OKD Community
   minKubeVersion: 1.14.0
   provider:
-    name: Red Hat
+    name: OKD Community
   labels:
     alm-owner-metering: local-storage-operator
     alm-status-descriptors: local-storage-operator.v4.15.0
@@ -407,7 +407,7 @@ spec:
         group: local.storage.openshift.io
         kind: LocalVolume
         name: localvolumes.local.storage.openshift.io
-        description: Manage local storage volumes for OpenShift
+        description: Manage local storage volumes for OKD
         version: v1
         specDescriptors:
           - description: User requested management state of this object
diff --git a/hack/create-bundle.sh b/hack/create-bundle.sh
index b68b84ec..41235a53 100755
--- a/hack/create-bundle.sh
+++ b/hack/create-bundle.sh
@@ -12,10 +12,10 @@ if [ "$#" -ne "4" ]; then
 fi

 DEFAULT_TOOL_BIN=$(which podman 2>/dev/null || which docker 2>/dev/null)
-if [ "$?" -ne "0" ]; then
-	echo "Error: No suitable container manipulation tool (podman, docker) found in \$PATH" 1>&2
-	exit 1
-fi
+#if [ "$?" -ne "0" ]; then
+#	echo "Error: No suitable container manipulation tool (podman, docker) found in \$PATH" 1>&2
+#	exit 1
+#fi
 TOOL_BIN=${TOOL_BIN:-$DEFAULT_TOOL_BIN}

 OPM_BIN=$(which opm 2>/dev/null)
@@ -50,8 +50,8 @@ $TOOL_BIN build -t $BUNDLE_IMAGE -f bundle.Dockerfile .
 $TOOL_BIN push $BUNDLE_IMAGE

 # Build the index image and push it
-$OPM_BIN index add --bundles $BUNDLE_IMAGE --tag $INDEX_IMAGE --container-tool $TOOL_NAME
-$TOOL_BIN push $INDEX_IMAGE
+#$OPM_BIN index add --bundles $BUNDLE_IMAGE --tag $INDEX_IMAGE --container-tool $TOOL_NAME
+#$TOOL_BIN push $INDEX_IMAGE


 echo
--
2.44.0

