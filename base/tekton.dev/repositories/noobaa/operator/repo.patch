From c6804bbedea909e2a48cfb86139a4193023a3ced Mon Sep 17 00:00:00 2001
From: SupremeMortal <6178101+SupremeMortal@users.noreply.github.com>
Date: Mon, 19 Feb 2024 11:15:22 +0000
Subject: [PATCH] OKDify

---
 Makefile                                      | 40 +++++++++++++++----
 build/Dockerfile                              |  2 +-
 bundle.Dockerfile                             | 17 ++++++++
 deploy/internal/prometheus-rules.yaml         | 12 +++---
 ...visioner.v1.0.0.clusterserviceversion.yaml |  4 +-
 ...noobaa-operator.clusterserviceversion.yaml |  2 +-
 6 files changed, 60 insertions(+), 17 deletions(-)
 create mode 100644 bundle.Dockerfile

diff --git a/Makefile b/Makefile
index 0575f77..5269eb8 100644
--- a/Makefile
+++ b/Makefile
@@ -66,14 +66,14 @@ cli: gen

 image: $(docker) gen
 	GOOS=linux CGO_ENABLED=$(or ${CGO_ENABLED},0) go build -o $(BIN)/noobaa-operator -gcflags all=-trimpath="$(MK_PARENT)" -asmflags all=-trimpath="$(MK_PARENT)" -mod=vendor $(CMD_MANAGER)
-	docker build -f build/Dockerfile -t $(IMAGE) .
+	#docker build -f build/Dockerfile -t $(IMAGE) .
 	@echo "✅ image"
 .PHONY: image

 dev-image: $(docker) gen
 	go build -o $(BIN)/noobaa-operator -trimpath -mod=vendor -gcflags all=-N -gcflags all=-l $(CMD_MANAGER)
-	docker build -f build/Dockerfile -t $(IMAGE) .
-	docker build -f build/DockerfileDev --build-arg base_image=$(IMAGE) -t $(DEV_IMAGE) .
+	#docker build -f build/Dockerfile -t $(IMAGE) .
+	#docker build -f build/DockerfileDev --build-arg base_image=$(IMAGE) -t $(DEV_IMAGE) .
 	@echo "✅ dev image"
 .PHONY: dev-image

@@ -99,8 +99,8 @@ $(OPERATOR_SDK):
 	@echo "✅ $(OPERATOR_SDK)"

 release-docker:
-	docker push $(IMAGE)
-	docker push $(CATALOG_IMAGE)
+	#docker push $(IMAGE)
+	#docker push $(CATALOG_IMAGE)
 	@echo "✅ docker push"
 .PHONY: release-docker

@@ -150,7 +150,7 @@ gen-olm: gen
 		pip3 install --upgrade pip && \
 		pip3 install operator-courier==2.1.11 && \
 		operator-courier --verbose verify --ui_validate_io $(OLM)
-	docker build -t $(CATALOG_IMAGE) -f build/catalog-source.Dockerfile .
+	#docker build -t $(CATALOG_IMAGE) -f build/catalog-source.Dockerfile .
 	@echo "✅ gen-olm"
 .PHONY: gen-olm

@@ -310,4 +310,30 @@ ifneq ($(DEEPCOPY_GEN_VERSION), $(shell deepcopy-gen --version | awk -F ":" '{pr
 DEEPCOPY_GEN=$(GOBIN)/deepcopy-gen
 else
 DEEPCOPY_GEN=$(shell which deepcopy-gen)
-endif
\ No newline at end of file
+endif
+
+NORM_VERSION ?= $(VERSION)
+DB_IMAGE ?= quay.io/sclorg/postgresql-15-c9s:latest
+
+.PHONY: okd-install
+okd-install:
+	go mod download
+
+.PHONY: okd-build
+okd-build: build
+	cp -f build/Dockerfile Dockerfile
+	cp -f build/bundle/Dockerfile bundle.Dockerfile
+
+.PHONY: okd-lint
+okd-lint: lint
+
+.PHONY: okd-test
+	echo "Tests disabled temporarily"
+
+.PHONY: okd-bundle
+okd-bundle: release-cli
+	MANIFESTS="$(MANIFESTS)" PSQL_12_IMAGE="$(DB_IMAGE)" CSV_NAME="noobaa-operator.clusterserviceversion.yaml" \
+		CORE_IMAGE="quay.io/okderators/noobaa-core:v$(NORM_VERSION)" COSI_SIDECAR_IMAGE="$(cosi-sidecar-image)" \
+		OBC_CRD="owned" OPERATOR_IMAGE="quay.io/okderators/noobaa-operator:v$(VERSION)" \
+		DB_IMAGE="$(DB_IMAGE)" \
+		build/gen-odf-package.sh
\ No newline at end of file
diff --git a/build/Dockerfile b/build/Dockerfile
index 50ea317..092af0d 100644
--- a/build/Dockerfile
+++ b/build/Dockerfile
@@ -1,4 +1,4 @@
-FROM registry.access.redhat.com/ubi9/ubi-minimal:latest
+FROM quay.io/centos/centos:stream9-minimal

 ENV OPERATOR=/usr/local/bin/noobaa-operator \
     USER_UID=1001 \
diff --git a/bundle.Dockerfile b/bundle.Dockerfile
new file mode 100644
index 0000000..bddee96
--- /dev/null
+++ b/bundle.Dockerfile
@@ -0,0 +1,17 @@
+FROM quay.io/operator-framework/upstream-registry-builder:v1.13.3 as builder
+# Add noobaa manifests
+COPY build/_output/olm manifests/noobaa
+# Add lib-bucket-provisioner manifests
+COPY deploy/obc/lib-bucket-provisioner.package.yaml manifests/lib-bucket-provisioner/
+COPY deploy/obc/lib-bucket-provisioner.v1.0.0.clusterserviceversion.yaml manifests/lib-bucket-provisioner/1.0.0/
+COPY deploy/obc/objectbucket.io_objectbuckets_crd.yaml manifests/lib-bucket-provisioner/1.0.0/
+COPY deploy/obc/objectbucket.io_objectbucketclaims_crd.yaml manifests/lib-bucket-provisioner/1.0.0/
+RUN /bin/initializer -o ./bundles.db
+
+FROM scratch
+COPY --from=builder /build/bundles.db /bundles.db
+COPY --from=builder /bin/registry-server /registry-server
+COPY --from=builder /bin/grpc_health_probe /bin/grpc_health_probe
+EXPOSE 50051
+ENTRYPOINT ["/registry-server"]
+CMD ["--database", "bundles.db"]
diff --git a/deploy/internal/prometheus-rules.yaml b/deploy/internal/prometheus-rules.yaml
index ee5e44e..6ec808b 100644
--- a/deploy/internal/prometheus-rules.yaml
+++ b/deploy/internal/prometheus-rules.yaml
@@ -37,38 +37,38 @@ spec:
         NooBaa_odf_health_status
       labels:
         system_type: OCS
-        system_vendor: Red Hat
+        system_vendor: OKD Community
       record: odf_system_health_status
     - expr: |
         NooBaa_total_usage
       labels:
         system_type: OCS
-        system_vendor: Red Hat
+        system_vendor: OKD Community
       record: odf_system_raw_capacity_used_bytes
     - expr: |
         sum by (namespace, managedBy, job, service) (rate(NooBaa_providers_ops_read_num[5m]) + rate(NooBaa_providers_ops_write_num[5m]))
       labels:
         system_type: OCS
-        system_vendor: Red Hat
+        system_vendor: OKD Community
       record: odf_system_iops_total_bytes
     - expr: |
         sum by (namespace, managedBy, job, service) (rate(NooBaa_providers_bandwidth_read_size[5m]) + rate(NooBaa_providers_bandwidth_write_size[5m]))
       labels:
         system_type: OCS
-        system_vendor: Red Hat
+        system_vendor: OKD Community
       record: odf_system_throughput_total_bytes
     - expr: |
         sum(NooBaa_num_buckets + NooBaa_num_buckets_claims)
       record: odf_system_bucket_count
       labels:
         system_type: OCS
-        system_vendor: Red Hat
+        system_vendor: OKD Community
     - expr: |
         sum(NooBaa_num_objects + NooBaa_num_objects_buckets_claims)
       record: odf_system_objects_total
       labels:
         system_type: OCS
-        system_vendor: Red Hat
+        system_vendor: OKD Community
   - name: noobaa-replication.rules
     rules:
     - expr: |
diff --git a/deploy/obc/lib-bucket-provisioner.v1.0.0.clusterserviceversion.yaml b/deploy/obc/lib-bucket-provisioner.v1.0.0.clusterserviceversion.yaml
index eb7fee1..2011373 100644
--- a/deploy/obc/lib-bucket-provisioner.v1.0.0.clusterserviceversion.yaml
+++ b/deploy/obc/lib-bucket-provisioner.v1.0.0.clusterserviceversion.yaml
@@ -11,7 +11,7 @@ metadata:
     createdAt: 2014-07-19T07:02:32.267701596Z
     certified: "false"
     description: Library for the dynamic provisioning of object store buckets to be used by object store providers.
-    support: Red Hat
+    support: OKD Community
     alm-examples: |-
       [
         {
@@ -60,7 +60,7 @@ spec:
   minKubeVersion: 1.10.0
   maturity: alpha
   provider:
-    name: Red Hat
+    name: OKD Community
   links:
     - name: Github
       url: https://github.com/kube-object-storage/lib-bucket-provisioner
diff --git a/deploy/olm/noobaa-operator.clusterserviceversion.yaml b/deploy/olm/noobaa-operator.clusterserviceversion.yaml
index ffa4443..d162130 100644
--- a/deploy/olm/noobaa-operator.clusterserviceversion.yaml
+++ b/deploy/olm/noobaa-operator.clusterserviceversion.yaml
@@ -9,7 +9,7 @@ metadata:
     createdAt: 2019-07-08T13:10:20.940Z
     certified: "false"
     description: NooBaa is an object data service for hybrid and multi cloud environments.
-    support: Red Hat
+    support: OKD Community
     alm-examples: placeholder
     operators.openshift.io/infrastructure-features: '["disconnected"]'
   name: placeholder
--
2.40.0.windows.1

