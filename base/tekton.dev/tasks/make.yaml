apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: make
  namespace: okd-team
  annotations:
    io.openshift.podman-fuse: ""
    io.kubernetes.cri-o.Devices: "/dev/fuse"
spec:
  params:
    - name: image
      description: The image to use for the build
      type: string
    - name: subdirectory
      description: The subdirectory to run the build in
      type: string
    - name: args
      description: The arguments to pass to the make command
      type: array
    - name: version
      description: The version to use for the build
      type: string
      default: ""
    - name: normalized-version
      description: The normalized version to use for the build
      type: string
      default: $(params.version)
    - name: env-map
      description: The env map
      type: string
      default: ""

  workspaces:
    - name: work

  steps:
    - name: run
      imagePullPolicy: Always
      workingDir: $(workspaces.work.path)/$(params.subdirectory)
      image: $(params.image)
      args: ["$(params.args)"]
      script: |
        echo "$(params.env-map) make $@"
        $(params.env-map) make $@
      securityContext:
        runAsNonRoot: true
        runAsUser: 65532
      env:
        - name: "VERSION"
          value: "$(params.version)"
        - name: "NORM_VERSION"
          value: "$(params.normalized-version)"
      volumeMounts:
        - name: $(workspaces.work.volume)
          mountPath: /var/lib/containers
          subPath: containers
        - name: $(workspaces.work.volume)
          mountPath: /home/build/.local/share/containers
          subPath: local-containers
        - name: $(workspaces.work.volume)
          mountPath: /run/containers
          subPath: run-containers
        - name: $(workspaces.work.volume)
          mountPath: /home/build/go/.cache
          subPath: go-cache-root
        - name: $(workspaces.work.volume)
          mountPath: /home/build/go/pkg
          subPath: go-pkg